name: Deploy to PyPI

on:
  push:
    branches:
      - master

jobs:

  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: [build-src, build-manylinux, build-macos, build-windows]
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
            user: __token__
            password: ${{ secrets.pypi_password }}

  build-src:
    name: sdist
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Switch to using Python 3.x by default
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build sdist
      run: python setup.py sdist
    - name: Store sdist package
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: dist

  build-manylinux:
    name: manylinux (${{ matrix.pep-425-tag }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: 2.7
            pep-425-tag: 'cp27-cp27m'
          - python-version: 2.7
            pep-425-tag: 'cp27-cp27mu'
          - python-version: 3.5
            pep-425-tag: 'cp35-cp35m'
          - python-version: 3.6
            pep-425-tag: 'cp36-cp36m'
          - python-version: 3.7
            pep-425-tag: 'cp37-cp37m'
          - python-version: 3.8
            pep-425-tag: 'cp38-cp38'
          # - python-version: 3.9
          #   pep-425-tag: 'cp39-cp39'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Build wheel for ${{ matrix.pep-425-tag }} on manylinux
        uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
        with:
          python-versions: ${{ matrix.pep-425-tag }}
          build-requirements: 'six Cython'
          system-packages: 'atlas-devel'
      - name: Store ${{ matrix.pep-425-tag }} wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist

  build-macos:
    name: macOS (py${{ matrix.python-version }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7, 3.6, 3.7, 3.8]  # , 3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install wheel setuptools
      - name: Build wheel for ${{ matrix.python-version }} on macOS
        run: python setup.py bdist_wheel
      - name: Store macOS (py${{ matrix.python-version }}) wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist

  build-windows:
    name: Windows (py${{ matrix.python-version }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]  # , 3.9]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version:  ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install wheel setuptools
      - name: Build wheel for ${{ matrix.python-version }} on Windows
        run: python setup.py bdist_wheel
      - name: Store Windows (py${{ matrix.python-version }}) wheel
        uses: actions/upload-artifact@v2
        with:
          name: python-package-distributions
          path: dist
