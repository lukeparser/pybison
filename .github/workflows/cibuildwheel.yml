name: Build CI wheels

on:
  push:
    branches:
      - dev-cibw
  workflow_dispatch:

jobs:
  build_wheels:
    needs: [build_sdist]
    name: Build wheels on ${{ matrix.os }} (${{ matrix.cibw_archs }})
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_SKIP: "*_i686 *-win32 pp* *-musllinux_*"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        cibw_archs: ["auto"]
        include:
          - os: ubuntu-20.04
            cibw_archs: "aarch64"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version:  3.x

      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel==2.2.2

      - name: Build wheels for CPython 3.9
        run: |
          python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD_LINUX: yum install -y atlas-devel
          CIBW_BEFORE_BUILD: python3 -m pip install -U pip && python3 -m pip install -r requirements.txt
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.6 3.7 3.8
        run: |
          python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp36-* cp37-* cp38-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_BEFORE_BUILD_LINUX: yum install -y atlas-devel
          CIBW_BEFORE_BUILD: python3 -m pip install -U pip && python3 -m pip install -r requirements.txt
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
